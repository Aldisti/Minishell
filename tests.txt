unset HOME - cd -> OK
echo -nnnnnnnm ciao -> OK
echo -nnnnann ciao -n -> OK
unset var - export $var=test -> OK
export "" var=test -> OK
echo ~ -> OK
echo "bip | bip ; coyotte > <" -> OK
export var='$USER' - echo $USER$var$USER$varciao$USER -> OK ($varciao viene espanso)
export | grep PATH -> OK
env | grep PATH -> OK
(export a=ciao) | (export) -> OK (non resetta il livello)
>prova ls | <prova cat -> OK
unset PATH - ls -> OK (ls funziona anche se PATH Ã¨ stato eliminato)
ls <prova -> OK (se prova non esiste ls lo interpreta come paramtro e lo prova a leggere)
lss <prova -> OK (dovrebbe dare come errore "prova not found", invece l'errore dato e' "ls: command not found")
lss - echo $? -> OK (l'exit status e' errato)
$ -> KO (non stampa "command not found" e setta l'errore sbagliato)
export var="cat Makefile | grep >" - echo $var -> ? (dovrebbe stampare la stringa e non eseguirla)
cat | cat | cat | ls -> KO (dovrebbe stampare ls e un cat rimanere in attesa)
[200~cat Makefile | grep pr | head -n 5 | cd file_not_exit~cat Makefile | grep pr | head -n 5 | cd file_not_exit -> CRASH (boh, l'ho fatto per sbaglio)
> test | echo blabla -> KO (l'exit status viene settato a 1 quando dovrebbe essere 0)
> file -> KO (ci sono leak e l'exit status viene settato a 1 anziche 0)
unset bla - $bla -> KO (l'exit status viene settato a 1 anziche 0)
export test="file1 file2" - >$test -> KO (stampa "command not found" anziche "ambiguous redirection")
export test="file1 file2" - >"$test" -> OK (nelle redirection e ci sono anche leak)
| - [invio] -> OK (setta exit status a 258 anziche 2)
echo bonjour > > out -> OK (esegue anziche dare errore)
echo bonjour >>> file -> OK (setta l'exit status a 1 anziche 2)
